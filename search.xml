<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>深度学习之——卷积神经网络</title>
    <url>/2022/09/11/%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B9%8B%E2%80%94%E2%80%94%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<h6 id="背景">背景</h6>
<img src="/images/image-20220911114410844.png" alt="引申背景" style="zoom:40%;">
> 是否可能进─步减少训练参数数量?
> 办法:提取出图像中的关键信息(轮廓)，再建立MLP模型进行训练
<h6 id="图像卷积运算">图像卷积运算</h6>
<blockquote>
<p>对图像矩阵与滤波器矩阵进行对应相乘再求和运算，转化得到新的矩阵,作用:<strong>快速定位图像中某些边缘特征</strong><br>
英文: convolution  —&gt; CNN</p>
</blockquote>
<p>A与B的卷积通常表示为:  A * B或convolution(A,B)<br>
<img src="/images/image-20220911121624085.png" alt="运算规则" style="zoom:33%;"><br>
<img src="/images/image-20220911122142445.png" alt="转换后" style="zoom:33%;"></p>
<h6 id="寻找竖向轮廓">寻找竖向轮廓</h6>
<img src="/images/image-20220911122445784.png" alt="转换后" style="zoom:33%;">
> 结论：包含竖向轮廓的区域非常亮（灰度值高)
###### 寻找竖向轮廓
<img src="/images/image-20220911122733403.png" alt="转换后" style="zoom:33%;">
<blockquote>
<p>结论：将图片与轮廓滤波器进行卷积运算,可快速定位固定轮廓特征的位置</p>
</blockquote>
<img src="/images/image-20220911122938543.png" alt="转换后" style="zoom:33%;">
> 结论：一个过滤器不够，需要寻找很多过滤器
<img src="/images/image-20220911123154171.png" alt="转换后" style="zoom:33%;">
<h6 id="池化层实现维度缩减">池化层实现维度缩减</h6>
<blockquote>
<p>池化:按照一个固定规则对图像矩阵进行处理,将其转换为更低维度的矩阵</p>
</blockquote>
<h6 id="最大法池化-max-pooling-常用">最大法池化(Max-pooling)（常用）</h6>
<blockquote>
<p>保留核心信息的情况下，实现维度缩减</p>
</blockquote>
<img src="/images/image-20220911123436374.png" alt="转换后" style="zoom:33%;">
<p>平均法池化(Avg-pooling)（取平均值）</p>
<h6 id="卷积神经网络">卷积神经网络</h6>
<blockquote>
<p>把卷积、池化、mlp先后连接在一起，组成卷积神经网络。</p>
</blockquote>
<img src="/images/image-20220911124154268.png" alt="转换后" style="zoom:33%;">
###### 卷积神经网络两大特点
<ol>
<li>参数共享(parameter sharing): 同一个特征过滤器可用于整张图片</li>
<li>稀疏连接（sparsity of connections): 生成的特征图片每个节点只与原图片中特定节点连接 =&gt; 将特征区域化，减小误差</li>
</ol>
<img src="/images/image-20220911124431218.png" alt="转换后" style="zoom:33%;">
<hr>
<h6 id="卷积运算导致的两个问题">卷积运算导致的两个问题</h6>
<ol>
<li>图像被压缩，造成信息丢失</li>
<li>边缘信息使用少，容易被忽略</li>
</ol>
<img src="/images/image-20220911125159146.png" alt="转换后" style="zoom:33%;">
通过padding增加像素的数量，由过滤器尺stride决定
<img src="/images/image-20220911132254701.png" alt="转换后" style="zoom:33%;">
###### 有效解决方法：图像填充（padding）
<blockquote>
<p>通过在图像各边增加像素，使其在进行卷积运算维持原图大小</p>
</blockquote>
<img src="/images/image-20220911125159146.png" alt="转换后" style="zoom:33%;">
<p>通过padding增加像素的数量，由过滤器尺stride决定</p>
<img src="/images/image-20220911132254701.png" alt="转换后" style="zoom:33%;">
<h6 id="经典的cnn模型">经典的CNN模型</h6>
<ol>
<li>LeNet-5</li>
<li>AlexNet</li>
<li>VGG</li>
</ol>
<blockquote>
<p>参考经典的CNN结构搭建新模型<br>
使用经典的CNN模型结构对图像预处理，再建立MLP模型</p>
</blockquote>
<h6 id="lenet-5">LeNet-5</h6>
<img src="/images/image-20220911132841327.png" alt="转换后" style="zoom:33%;">
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://yann.lecun.com/exdb/publis/pdf/lecun-01a.pdf</span><br></pre></td></tr></table></figure>
<h6 id="alexnet">AlexNet</h6>
<img src="/images/image-20220911133208675.png" alt="转换后" style="zoom:33%;">
<p>AlexNet论文：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf</span><br></pre></td></tr></table></figure>
<blockquote>
<p>输入图像: 227X 227X 3RGB图，3个通道</p>
<p>训练参数:约60,000,000个</p>
<p>特点:</p>
<p>1、适用于识别较为复杂的彩色图，可识别1000种类别<br>
2、结构比LeNet更为复杂，使用Relu作为激活函数</p>
</blockquote>
<p>AlexNet的出现使得：</p>
<blockquote>
<p>学术界开始相信深度学习技术,<br>
在计算机视觉立用中可以得到很不错的结果。</p>
</blockquote>
<h6 id="vgg-16">VGG-16</h6>
<img src="/images/image-20220911133838642.png" alt="转换后" style="zoom:33%;">
<p>VGG-16论文：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://arxiv.org/pdf/1409.1556.pdf</span><br></pre></td></tr></table></figure>
<blockquote>
<p>输入图像:227 X 227X 3 RGB图，3个通道</p>
<p>训练参数:约138,000,000个</p>
<p>特点:</p>
<p>1、所有卷积层tilter 宽和高都是3、步长为1，padding都使用same convolution;<br>
2、所有池化层的 filtey宽和高都是况，步长都是2;<br>
3、相比alexnet，有更多的filter用于提取轮廓信息，具有更高精准性</p>
</blockquote>
<img src="/images/image-20220911134438302.png" alt="转换后" style="zoom:33%;">
<img src="/images/image-20220911134500337.png" alt="转换后" style="zoom:33%;">
<hr>
]]></content>
      <categories>
        <category>人工智能</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>PTA-天梯赛——L1-016 查验身份证</title>
    <url>/2022/09/08/PTA-%E5%A4%A9%E6%A2%AF%E8%B5%9B%E2%80%94%E2%80%94L1-016-%E6%9F%A5%E9%AA%8C%E8%BA%AB%E4%BB%BD%E8%AF%81/</url>
    <content><![CDATA[<p><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805122985476096">PTA-天梯赛——L1-016 查验身份证</a></p>
<p>一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。校验码的计算规则如下：</p>
<p>首先对前17位数字加权求和，权重分配为：{7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2}；然后将计算的和对11取模得到值Z；最后按照以下关系对应Z值与校验码M的值：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Z：0 1 2 3 4 5 6 7 8 9 10</span><br><span class="line">M：1 0 X 9 8 7 6 5 4 3 2</span><br></pre></td></tr></table></figure>
<p>现在给定一些身份证号码，请你验证校验码的有效性，并输出有问题的号码。</p>
<h6 id="输入格式：">输入格式：</h6>
<p>输入第一行给出正整数N（≤100）是输入的身份证号码的个数。随后N行，每行给出1个18位身份证号码。</p>
<h6 id="输出格式：">输出格式：</h6>
<p>按照输入的顺序每行输出1个有问题的身份证号码。这里并不检验前17位是否合理，只检查前17位是否全为数字且最后1位校验码计算准确。如果所有号码都正常，则输出All passed。</p>
<span id="more"></span>
<h6 id="输入样例1：">输入样例1：</h6>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">320124198808240056</span><br><span class="line">12010X198901011234</span><br><span class="line">110108196711301866</span><br><span class="line">37070419881216001X</span><br></pre></td></tr></table></figure>
<h6 id="输出样例1：">输出样例1：</h6>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12010X198901011234</span><br><span class="line">110108196711301866</span><br><span class="line">37070419881216001X</span><br></pre></td></tr></table></figure>
<h6 id="输入样例2：">输入样例2：</h6>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">320124198808240056</span><br><span class="line">110108196711301862</span><br></pre></td></tr></table></figure>
<h6 id="输出样例2：">输出样例2：</h6>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">All passed</span><br></pre></td></tr></table></figure>
<h6 id="C-高级解法">C++高级解法</h6>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    map&lt;<span class="type">int</span>, <span class="type">char</span>&gt; m;</span><br><span class="line"> </span><br><span class="line">    m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;<span class="type">int</span>, <span class="type">char</span>&gt;(<span class="number">0</span>, <span class="string">&#x27;1&#x27;</span>));</span><br><span class="line">    m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;<span class="type">int</span>, <span class="type">char</span>&gt;(<span class="number">1</span>, <span class="string">&#x27;0&#x27;</span>));</span><br><span class="line">    m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;<span class="type">int</span>, <span class="type">char</span>&gt;(<span class="number">2</span>, <span class="string">&#x27;X&#x27;</span>));</span><br><span class="line">    m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;<span class="type">int</span>, <span class="type">char</span>&gt;(<span class="number">3</span>, <span class="string">&#x27;9&#x27;</span>));</span><br><span class="line">    m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;<span class="type">int</span>, <span class="type">char</span>&gt;(<span class="number">4</span>, <span class="string">&#x27;8&#x27;</span>));</span><br><span class="line">    m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;<span class="type">int</span>, <span class="type">char</span>&gt;(<span class="number">5</span>, <span class="string">&#x27;7&#x27;</span>));</span><br><span class="line">    m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;<span class="type">int</span>, <span class="type">char</span>&gt;(<span class="number">6</span>, <span class="string">&#x27;6&#x27;</span>));</span><br><span class="line">    m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;<span class="type">int</span>, <span class="type">char</span>&gt;(<span class="number">7</span>, <span class="string">&#x27;5&#x27;</span>));</span><br><span class="line">    m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;<span class="type">int</span>, <span class="type">char</span>&gt;(<span class="number">8</span>, <span class="string">&#x27;4&#x27;</span>));</span><br><span class="line">    m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;<span class="type">int</span>, <span class="type">char</span>&gt;(<span class="number">9</span>, <span class="string">&#x27;3&#x27;</span>));</span><br><span class="line">    m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;<span class="type">int</span>, <span class="type">char</span>&gt;(<span class="number">10</span>, <span class="string">&#x27;2&#x27;</span>));</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    string num[<span class="number">100</span>];</span><br><span class="line">    <span class="type">int</span> quan[<span class="number">17</span>]=&#123;<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>&#125;;</span><br><span class="line">    <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        cin&gt;&gt;num[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; num[i].<span class="built_in">size</span>()<span class="number">-1</span>; ++j) &#123;</span><br><span class="line">             sum+=quan[j]*(num[i][j]<span class="number">-48</span>);<span class="comment">//48为字符&#x27;0&#x27;的十进制数</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> Z=sum%<span class="number">11</span>;</span><br><span class="line">        <span class="type">char</span> M=m[Z];</span><br><span class="line">        <span class="keyword">if</span> (M==num[i][<span class="number">17</span>])&#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;num[i]&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (count==n)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;All passed&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="C-一般解法">C++一般解法</h6>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*三个变量分别储存权重、对应值、输入的身份证号*/</span></span><br><span class="line"><span class="type">int</span> quanzhong[<span class="number">17</span>]=&#123;<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>&#125;;</span><br><span class="line"><span class="type">int</span> m[<span class="number">11</span>]=&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>&#125;; <span class="comment">//这里把X转化为10，方便之后的操作 </span></span><br><span class="line">string s;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*用来判断身份证号是否正确*/</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isTrue</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">17</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(s[i]&lt;<span class="string">&#x27;0&#x27;</span> || s[i]&gt;<span class="string">&#x27;9&#x27;</span>)&#123;  <span class="comment">//先判断输入的值是否合法，如果不合法直接返回false </span></span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			sum += (s[i]-<span class="string">&#x27;0&#x27;</span>)*quanzhong[i];  <span class="comment">//用sum来保存每一位与权重相乘的和 </span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> temp = (s[<span class="number">17</span>]==<span class="string">&#x27;X&#x27;</span>)?<span class="number">10</span>:(s[<span class="number">17</span>]-<span class="string">&#x27;0&#x27;</span>); <span class="comment">//如果最后一位是X的话就转化为10，其他不变 </span></span><br><span class="line">	<span class="keyword">return</span> (m[sum%<span class="number">11</span>] == temp);   <span class="comment">//返回的值就是校验值与身份证最后一位是否相同 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n,flag=<span class="number">0</span>;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		cin&gt;&gt;s;</span><br><span class="line">		<span class="keyword">if</span>(!<span class="built_in">isTrue</span>())&#123;   <span class="comment">//如果校验没有通过就把这个身份证输出，并把flag置1 </span></span><br><span class="line">			cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">			flag = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(flag == <span class="number">0</span>)&#123;  <span class="comment">//如果flag为0的话说明所有输入的身份证都通过校验 </span></span><br><span class="line">		cout&lt;&lt;<span class="string">&quot;All passed&quot;</span>;</span><br><span class="line">	&#125;		</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>刷题</category>
        <category>PTA</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>天梯赛</tag>
      </tags>
  </entry>
  <entry>
    <title>早知道暑假不留校了</title>
    <url>/2022/09/08/%E6%97%A9%E7%9F%A5%E9%81%93%E6%9A%91%E5%81%87%E4%B8%8D%E7%95%99%E6%A0%A1%E4%BA%86/</url>
    <content><![CDATA[<img src="/images/ljh.png" alt="早知道暑假不留校了" style="zoom:50%;">]]></content>
      <categories>
        <category>李季鸿的日常随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>PTA-天梯赛——L1-015 跟奥巴马一起画方块</title>
    <url>/2022/09/08/PTA-%E5%A4%A9%E6%A2%AF%E8%B5%9B%E2%80%94%E2%80%94L1-015-%E8%B7%9F%E5%A5%A5%E5%B7%B4%E9%A9%AC%E4%B8%80%E8%B5%B7%E7%94%BB%E6%96%B9%E5%9D%97/</url>
    <content><![CDATA[<p><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805124398956544">PTA-天梯赛——L1-015 跟奥巴马一起画方块</a></p>
<p>美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！</p>
<h6 id="输入格式：">输入格式：</h6>
<p>输入在一行中给出正方形边长N（3≤N≤21）和组成正方形边的某种字符C，间隔一个空格。</p>
<h6 id="输出格式：">输出格式：</h6>
<p>输出由给定字符C画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的50%（四舍五入取整）。</p>
<h6 id="输入样例：">输入样例：</h6>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 a</span><br></pre></td></tr></table></figure>
<h6 id="输出样例：">输出样例：</h6>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aaaaaaaaaa</span><br><span class="line">aaaaaaaaaa</span><br><span class="line">aaaaaaaaaa</span><br><span class="line">aaaaaaaaaa</span><br><span class="line">aaaaaaaaaa</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h6 id="我的解法">我的解法</h6>
<p>简单又容易理解，但一看就很low</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">    string x;</span><br><span class="line">    cin&gt;&gt;N;</span><br><span class="line">    cin&gt;&gt;x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;((N<span class="number">-1</span>)/<span class="number">2</span>)+<span class="number">1</span>; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;N; j++) &#123;</span><br><span class="line">		    cout&lt;&lt;x[<span class="number">0</span>];</span><br><span class="line">	    &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="网上的思路——Java">网上的思路——Java</h6>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 李季鸿</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		Scanner s=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="comment">//		int n=s.nextInt();</span></span><br><span class="line"><span class="comment">//		char ch1=s.</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> s.nextLine();</span><br><span class="line">		String[] ch=str.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		<span class="type">int</span> n=Integer.parseInt(ch[<span class="number">0</span>]);</span><br><span class="line">		<span class="type">int</span> b=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">			b=n/<span class="number">2</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			b=(<span class="type">int</span>)(n/<span class="number">2</span>)+<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="comment">//		System.out.println(b);</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;b;i++) &#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n-<span class="number">1</span>;j++) &#123;</span><br><span class="line">				System.out.print(ch[<span class="number">1</span>]);</span><br><span class="line">			&#125;</span><br><span class="line">			System.out.println(ch[<span class="number">1</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>刷题</category>
        <category>PTA</category>
      </categories>
      <tags>
        <tag>天梯赛</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>PTA-天梯赛——L1-013 计算阶乘和</title>
    <url>/2022/09/08/PTA-%E5%A4%A9%E6%A2%AF%E8%B5%9B%E2%80%94%E2%80%94L1-013-%E8%AE%A1%E7%AE%97%E9%98%B6%E4%B9%98%E5%92%8C/</url>
    <content><![CDATA[<p><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805127389495296">PTA-天梯赛——L1-013 计算阶乘和</a></p>
<p>对于给定的正整数N，需要你计算 S=1!+2!+3!+…+N!。</p>
<h6 id="输入格式：">输入格式：</h6>
<p>输入在一行中给出一个不超过10的正整数N。</p>
<h6 id="输出格式：">输出格式：</h6>
<p>在一行中输出S的值。</p>
<h6 id="输入样例：">输入样例：</h6>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<h6 id="输出样例：">输出样例：</h6>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h6 id="我的解法">我的解法</h6>
<p>简单又容易理解，但一看就很low</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">JieCheng</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> x*(<span class="built_in">JieCheng</span>(x<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">    <span class="type">int</span> SUM = <span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;N;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=N; i&gt;<span class="number">0</span>; i--) &#123;</span><br><span class="line">		SUM+=<span class="built_in">JieCheng</span>(i);</span><br><span class="line">	&#125;</span><br><span class="line">    cout&lt;&lt;SUM;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="网上的思路">网上的思路</h6>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">	<span class="type">int</span> n;    </span><br><span class="line">	cin&gt;&gt;n;    </span><br><span class="line">	<span class="type">int</span> sum=<span class="number">0</span>;    </span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)    </span><br><span class="line">	&#123;        </span><br><span class="line">		<span class="type">int</span> temp=<span class="number">1</span>;        </span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)        </span><br><span class="line">		&#123;            </span><br><span class="line">			temp=temp*j;        </span><br><span class="line">		&#125;        </span><br><span class="line">		sum=sum+temp;    </span><br><span class="line">	&#125;    </span><br><span class="line">	cout&lt;&lt;sum;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>刷题</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>天梯赛</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ STL库中map的常见操作</title>
    <url>/2022/09/08/C-STL%E5%BA%93%E4%B8%ADmap%E7%9A%84%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h6 id="头文件：">头文件：</h6>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br></pre></td></tr></table></figure>
<h6 id="定义：">定义：</h6>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">map&lt;<span class="type">char</span>,<span class="type">int</span>&gt;m;</span><br><span class="line"><span class="comment">//char是下面中括号中元素的数据类型（当然可以换成其他的），</span></span><br><span class="line"><span class="comment">//int是等号右边的元素的数据类型。定义什么样的类型是随便的，现在听着可能有点迷，看了下面的赋值可能就懂了</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//对m进行赋值</span></span><br><span class="line">map&lt;<span class="type">char</span>,<span class="type">int</span>&gt;m;</span><br><span class="line">m[<span class="string">&#x27;a&#x27;</span>]=<span class="number">4</span>;</span><br><span class="line">m[<span class="string">&#x27;d&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">m[<span class="string">&#x27;c&#x27;</span>]=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//还是对m进行赋值</span></span><br><span class="line">map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;m;</span><br><span class="line">m[<span class="number">1</span>]=<span class="number">6</span>;</span><br><span class="line">m[<span class="number">3</span>]=<span class="number">4</span>;</span><br><span class="line">m[<span class="number">2</span>]=<span class="number">8</span>;</span><br><span class="line"><span class="comment">//这些数值均没有任何特殊意义，都是随便赋的值</span></span><br></pre></td></tr></table></figure>
<h6 id="常用函数">常用函数</h6>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">m.<span class="built_in">push</span>();</span><br><span class="line">m.<span class="built_in">pop</span>(); </span><br><span class="line"><span class="comment">//emmmmmm,上面这两个函数在map里面都没有</span></span><br><span class="line"></span><br><span class="line">m.<span class="built_in">clear</span>();     <span class="comment">//清空m中的所有元素</span></span><br><span class="line">m.<span class="built_in">empty</span>();     <span class="comment">//判断m是否为空</span></span><br><span class="line">m.<span class="built_in">begin</span>();     <span class="comment">//返回指向map头部的迭代器</span></span><br><span class="line">m.<span class="built_in">end</span>();       <span class="comment">//返回指向map尾部的迭代器</span></span><br><span class="line">m.<span class="built_in">rbegin</span>();    <span class="comment">//返回一个指向map尾部的逆向迭代器</span></span><br><span class="line">m.<span class="built_in">rend</span>();      <span class="comment">//返回一个指向map头部的逆向迭代器</span></span><br><span class="line">m.<span class="built_in">erase</span>();     <span class="comment">//删除指定元素</span></span><br><span class="line">m.<span class="built_in">inser</span>();     <span class="comment">//插入元素</span></span><br><span class="line">m.<span class="built_in">find</span>();      <span class="comment">//查找指定元素</span></span><br><span class="line">m.<span class="built_in">swap</span>();      <span class="comment">//交换两个map中的所有元素（注意：两个map中定义的类型需要完全一致）</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string s1,s2;</span><br><span class="line">	<span class="built_in">getline</span>(cin,s1);</span><br><span class="line">	<span class="built_in">getline</span>(cin,s2);</span><br><span class="line">	set&lt;<span class="type">char</span>&gt; b;</span><br><span class="line">	<span class="comment">//cout&lt;&lt;s1&lt;&lt;endl&lt;&lt;s2&lt;&lt;endl;</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;s2.<span class="built_in">length</span>(); i++) &#123;</span><br><span class="line">		b.<span class="built_in">insert</span>(s2[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;s1.<span class="built_in">length</span>(); i++) &#123;</span><br><span class="line">		set&lt;<span class="type">char</span>&gt;::iterator it=b.<span class="built_in">find</span>(s1[i]);</span><br><span class="line">		<span class="keyword">if</span>(*it!=s1[i])</span><br><span class="line">			cout&lt;&lt;s1[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>提前说明：</p>
<p>其实在map内部，已经默认将其中的元素按照中括号中的元素的大小，按照从小到大的顺序排列好了</p>
</blockquote>
<h6 id="示例">示例</h6>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   map&lt;<span class="type">char</span>,<span class="type">int</span>&gt;m1;</span><br><span class="line">   map&lt;<span class="type">char</span>,<span class="type">int</span>&gt;m2;</span><br><span class="line"></span><br><span class="line">   m1[<span class="string">&#x27;q&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">   m1[<span class="string">&#x27;w&#x27;</span>] = <span class="number">2</span>;</span><br><span class="line">   m1[<span class="string">&#x27;e&#x27;</span>] = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">   m2[<span class="string">&#x27;a&#x27;</span>] = <span class="number">4</span>;</span><br><span class="line">   m2[<span class="string">&#x27;s&#x27;</span>] = <span class="number">5</span>;</span><br><span class="line">   m2[<span class="string">&#x27;d&#x27;</span>] = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">   cout&lt;&lt;m1.<span class="built_in">size</span>()&lt;&lt;endl;<span class="comment">//运算结果：3</span></span><br><span class="line">   </span><br><span class="line">   m1.<span class="built_in">erase</span>(m1.<span class="built_in">begin</span>());<span class="comment">//删除m1中的第一个元素（指的是中括号中所有元素中最小的，即m1[&#x27;e&#x27;] = 3）</span></span><br><span class="line">   map&lt;<span class="type">char</span>,<span class="type">int</span>&gt;::iterator it;<span class="comment">//使用迭代器将map中的元素输出</span></span><br><span class="line">   <span class="keyword">for</span>(it=m1.<span class="built_in">begin</span>();it!=m1.<span class="built_in">end</span>();it++)</span><br><span class="line">   &#123; </span><br><span class="line">      cout&lt;&lt;it-&gt;first&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;it-&gt;second&lt;&lt;endl;<span class="comment">//该语句等价于 cout&lt;&lt;(*it).first&lt;&lt;&#x27; &#x27;&lt;&lt;(*it).second&lt;&lt;endl;</span></span><br><span class="line">      <span class="comment">//这是map的固定输出格式</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//运算结果：q 1</span></span><br><span class="line">   <span class="comment">//         w 2</span></span><br><span class="line">   </span><br><span class="line">   m1.<span class="built_in">swap</span>(m2);<span class="comment">//交换两个map中的所有元素</span></span><br><span class="line">   map&lt;<span class="type">char</span>,<span class="type">int</span>&gt;::reverse_iterator rit;</span><br><span class="line">   <span class="keyword">for</span>(rit=m1.<span class="built_in">rbegin</span>();rit!=m1.<span class="built_in">rend</span>();rit++)<span class="comment">//逆向输出，可以看成从大到小输出</span></span><br><span class="line">   &#123;</span><br><span class="line">      cout&lt;&lt;(*rit).first&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;(*rit).second&lt;&lt;endl;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//运算结果：s 5</span></span><br><span class="line">   <span class="comment">//         d 5</span></span><br><span class="line">   <span class="comment">//         a 4</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>下面是整个代码的运算结果：</p>
<p><img src="https://img-blog.csdnimg.cn/20200202231054222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MDIwODU4,size_16,color_FFFFFF,t_70" alt="运算结果"></p>
]]></content>
      <categories>
        <category>语法</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>STL</tag>
        <tag>map</tag>
      </tags>
  </entry>
  <entry>
    <title>PTA-天梯赛——L1-011 A-B</title>
    <url>/2022/09/07/PTA-%E5%A4%A9%E6%A2%AF%E8%B5%9B%E2%80%94%E2%80%94L1-011-A-B/</url>
    <content><![CDATA[<p><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805130426171392">PTA-天梯赛——L1-011 A-B</a></p>
<p>本题要求你计算A−B。不过麻烦的是，A和B都是字符串 —— 即从字符串A中把字符串B所包含的字符全删掉，剩下的字符组成的就是字符串A−B。</p>
<h6 id="输入格式：">输入格式：</h6>
<p>输入在2行中先后给出字符串A和B。两字符串的长度都不超过10e4 ，并且保证每个字符串都是由可见的ASCII码和空白字符组成，最后以换行符结束。</p>
<h6 id="输出格式：">输出格式：</h6>
<p>在一行中打印出A−B的结果字符串。</p>
<h6 id="输入样例：">输入样例：</h6>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I love GPLT!  It&#x27;s a fun game!</span><br><span class="line">aeiou</span><br></pre></td></tr></table></figure>
<h6 id="输出样例：">输出样例：</h6>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I lv GPLT!  It&#x27;s  fn gm!</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h6 id="AC【map】">AC【map】</h6>
<p>简单又容易理解，但是我不会想到的啊！！！</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string a,b;</span><br><span class="line">	<span class="built_in">getline</span>(cin,a);</span><br><span class="line">	<span class="built_in">getline</span>(cin,b);</span><br><span class="line">	map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; m;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;b.<span class="built_in">length</span>(); i++) &#123;</span><br><span class="line">		m[b[i]]=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;a.<span class="built_in">length</span>(); i++) &#123;</span><br><span class="line">		<span class="keyword">if</span>(m[a[i]]!=<span class="number">1</span>) &#123;</span><br><span class="line">			cout&lt;&lt;a[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="【set】">【set】</h6>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string s1,s2;</span><br><span class="line">	<span class="built_in">getline</span>(cin,s1);</span><br><span class="line">	<span class="built_in">getline</span>(cin,s2);</span><br><span class="line">	set&lt;<span class="type">char</span>&gt; s;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;s2.<span class="built_in">length</span>(); i++) &#123;</span><br><span class="line">		s.<span class="built_in">insert</span>(s2[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;s1.<span class="built_in">length</span>(); i++) &#123;</span><br><span class="line">		<span class="keyword">if</span>(s.<span class="built_in">find</span>(s1[i])==s.<span class="built_in">end</span>())</span><br><span class="line">			cout&lt;&lt;s1[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string s1,s2;</span><br><span class="line">	<span class="built_in">getline</span>(cin,s1);</span><br><span class="line">	<span class="built_in">getline</span>(cin,s2);</span><br><span class="line">	set&lt;<span class="type">char</span>&gt; b;</span><br><span class="line">	<span class="comment">//cout&lt;&lt;s1&lt;&lt;endl&lt;&lt;s2&lt;&lt;endl;</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;s2.<span class="built_in">length</span>(); i++) &#123;</span><br><span class="line">		b.<span class="built_in">insert</span>(s2[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;s1.<span class="built_in">length</span>(); i++) &#123;</span><br><span class="line">		set&lt;<span class="type">char</span>&gt;::iterator it=b.<span class="built_in">find</span>(s1[i]);</span><br><span class="line">		<span class="keyword">if</span>(*it!=s1[i])</span><br><span class="line">			cout&lt;&lt;s1[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="普通方法1">普通方法1</h6>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string a,b,c=<span class="string">&quot;&quot;</span>;</span><br><span class="line">	<span class="built_in">getline</span>(cin,a);</span><br><span class="line">	<span class="built_in">getline</span>(cin,b);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;a.<span class="built_in">length</span>(); i++) &#123;</span><br><span class="line">		<span class="type">bool</span> f=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;b.<span class="built_in">length</span>(); j++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]==b[j])</span><br><span class="line">				f=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(f==<span class="number">0</span>)</span><br><span class="line">			c=c+a[i];</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;c;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="普通方法2">普通方法2</h6>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string a,b;</span><br><span class="line">	<span class="built_in">getline</span>(cin,a);</span><br><span class="line">	<span class="built_in">getline</span>(cin,b);</span><br><span class="line">	<span class="type">int</span> len=a.<span class="built_in">length</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;b.<span class="built_in">length</span>(); i++) &#123;</span><br><span class="line">		<span class="type">char</span> s=b[i];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;len; j++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(s==a[j]) &#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="type">int</span> k=j; k&lt;len<span class="number">-1</span>; k++) &#123;</span><br><span class="line">					a[k]=a[k+<span class="number">1</span>];</span><br><span class="line">				&#125;</span><br><span class="line">				len--;</span><br><span class="line">				j--;<span class="comment">//这里要-- 就是排除连着两个一样的字符</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;len; i++)</span><br><span class="line">		cout&lt;&lt;a[i];</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>刷题</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>天梯赛</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode刷题</title>
    <url>/2022/09/07/LeetCode%E5%88%B7%E9%A2%98/</url>
    <content><![CDATA[<h1><strong>LeetCode刷题记录</strong></h1>
<h1>贪心算法</h1>
<h2 id="435——无重叠区间"><a href="https://leetcode.cn/problems/non-overlapping-intervals/">435——无重叠区间</a></h2>
<blockquote>
<p>2022-08-014</p>
</blockquote>
<p><strong>方法1.动态规划</strong></p>
<ul>
<li>
<p>思路: dp[i]表示前i个区间中最大不重合区间的个数，首先将区间数组按左边界排序，找出intervals中最多有多少个不重复的区间，动态规划方程dp[i] = Math.max(dp[i]，dp[j] + 1)。intervals的长度减去最多的不重复的区间就是最少删除区间的个数</p>
</li>
<li>
<p>复杂度:时间复杂度0(n^2)，两层嵌套循环leetcode执行超时复杂度过高。空间复杂度0(n), dp数组的空间</p>
<p><strong>javascript</strong></p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//leetcode执行超时 复杂度过高</span></span><br><span class="line"><span class="keyword">var</span> eraseOverlapIntervals = <span class="keyword">function</span> (<span class="params">intervals</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!intervals.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    intervals.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a[<span class="number">0</span>] - b[<span class="number">0</span>]); <span class="comment">//按左边界排序</span></span><br><span class="line">    <span class="keyword">const</span> n = intervals.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">const</span> dp = <span class="keyword">new</span> <span class="title class_">Array</span>(n).<span class="title function_">fill</span>(<span class="number">1</span>); <span class="comment">//初始化dp数组</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">            <span class="comment">//循环i,j找出intervals中最多有多少个不重复的区间</span></span><br><span class="line">            <span class="comment">//j的右边界小于i的左边界 相当于多出了一个不重合区间</span></span><br><span class="line">            <span class="keyword">if</span> (intervals[j][<span class="number">1</span>] &lt;= intervals[i][<span class="number">0</span>]) &#123;</span><br><span class="line">                dp[i] = <span class="title class_">Math</span>.<span class="title function_">max</span>(dp[i], dp[j] + <span class="number">1</span>); <span class="comment">//更新dp[i]</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n - <span class="title class_">Math</span>.<span class="title function_">max</span>(...dp); <span class="comment">//n减去最多的不重复的区间 就是最少删除区间的个数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p><strong>java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">eraseOverlapIntervals</span><span class="params">(<span class="type">int</span>[][] intervals)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (intervals.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        Arrays.sort(intervals, <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;<span class="type">int</span>[]&gt;() &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(<span class="type">int</span>[] interval1, <span class="type">int</span>[] interval2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> interval1[<span class="number">0</span>] - interval2[<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> intervals.length;</span><br><span class="line">        <span class="type">int</span>[] dp = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">        Arrays.fill(dp, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; i; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span> (intervals[j][<span class="number">1</span>] &lt;= intervals[i][<span class="number">0</span>]) &#123;</span><br><span class="line">                    dp[i] = Math.max(dp[i], dp[j] + <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n - Arrays.stream(dp).max().getAsInt();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>方法2.贪心</strong></p>
<ul>
<li>
<p>思路：intervals按右边界排序，然后从左往右遍历，右边界结束的越早，留给后面的区间的空间就越大，不重合的区间个数就越多，intervals的长度减去最多的不重复的区间 就是最少删除区间的个数</p>
</li>
<li>
<p>复杂度：时间复杂度O(nlogn)，数组排序O(nlogn)，循环一次数组O(n)。空间复杂度O(logn)，排序需要的栈空间</p>
<p><strong>javascript</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> eraseOverlapIntervals = <span class="keyword">function</span> (<span class="params">intervals</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!intervals.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//按右边界排序，然后从左往右遍历，右边界结束的越早，留给后面的区间的空间就越大，不重合的区间个数就越多</span></span><br><span class="line">    intervals.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a[<span class="number">1</span>] - b[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> n = intervals.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">let</span> right = intervals[<span class="number">0</span>][<span class="number">1</span>]; <span class="comment">//right初始化为第一个区间的右边界</span></span><br><span class="line">    <span class="keyword">let</span> ans = <span class="number">1</span>; <span class="comment">//最多的不重合区间的个数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="comment">//循环区间数组</span></span><br><span class="line">        <span class="keyword">if</span> (intervals[i][<span class="number">0</span>] &gt;= right) &#123;</span><br><span class="line">            <span class="comment">//当区间的左边界大于上一个区间的右边界的时候 说明是一对不重合区间</span></span><br><span class="line">            ++ans; <span class="comment">//ans加1</span></span><br><span class="line">            right = intervals[i][<span class="number">1</span>]; <span class="comment">//更新right</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n - ans; <span class="comment">//intervals的长度减去最多的不重复的区间 就是最少删除区间的个数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><strong>java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">eraseOverlapIntervals</span><span class="params">(<span class="type">int</span>[][] intervals)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (intervals.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        Arrays.sort(intervals, <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;<span class="type">int</span>[]&gt;() &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(<span class="type">int</span>[] interval1, <span class="type">int</span>[] interval2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> interval1[<span class="number">1</span>] - interval2[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> intervals.length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> intervals[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (intervals[i][<span class="number">0</span>] &gt;= right) &#123;</span><br><span class="line">                ++ans;</span><br><span class="line">                right = intervals[i][<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n - ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>刷题</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/09/07/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start">Quick Start</h2>
<span id="more"></span>
<h3 id="Create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>前端笔记</title>
    <url>/2022/09/06/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1>前端笔记</h1>
<p><strong>字体图标-Iconfont</strong></p>
<p>引用字体图标样式表</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./iconfont.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>调用图标对应的类名，必须调用两个类名</p>
<ul>
<li>iconfont类：基本样式，包含字体的使用等</li>
<li>icon-xxx:图标对应的类名</li>
</ul>
<hr>
<h2 id="表格隔行换色">表格隔行换色:</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.bg</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 用到新的鼠标事件鼠标经过onmouseover鼠标离开onmouseout</span></span><br><span class="line"><span class="comment">核心思路∶鼠标经过tr行，当前的行变背景颜色，鼠标离开去掉当前的背景颜色</span></span><br><span class="line"><span class="comment">注意:第一行( thead里面的行）不需要变换颜色，因此我们获取的是tbody里面的行 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1.获取元素 获取的是 tbody里面的所有行</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> trs = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;tbody&#x27;</span>).<span class="title function_">querySelector</span>(<span class="string">&#x27;tr&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 2.利用循环绑定注册事件</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;trs.<span class="property">length</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 3.鼠标经过事件 onmouseover</span></span></span><br><span class="line"><span class="language-javascript">            trs[i].<span class="property">onmouseover</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(11);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">className</span> = <span class="string">&#x27;bg&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 4.鼠标离开事件 onmouseout</span></span></span><br><span class="line"><span class="language-javascript">            trs[i].<span class="property">onmouseout</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(11);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">className</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="表单全选">表单全选:</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> j_caAll = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;j_caAll&#x27;</span>);   <span class="comment">//j_caAll是全局选项</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> j_tbs = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;j_tbs&#x27;</span>).<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;input&#x27;</span>);     <span class="comment">//下面所有的复选框 </span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//注册事件</span></span></span><br><span class="line"><span class="language-javascript">        j_caAll.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//this.checked 它可以得到当前复选框的选中状态，如果是true就是选中，如果是false就是未选中</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; j_tbs.<span class="property">length</span>; i++)&#123;</span></span><br><span class="line"><span class="language-javascript">                j_tbs[i].<span class="property">checked</span> = <span class="variable language_">this</span>.<span class="property">checked</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; j_tbs.<span class="property">length</span>; i++)&#123;</span></span><br><span class="line"><span class="language-javascript">            j_tbs[i].<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> flag = <span class="literal">true</span>; <span class="comment">//控制全选按钮是否选中</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//每次点击下面的复选框都要检查4个小按钮是否被选中</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>; i &lt; j_tbs.<span class="property">length</span>; i++)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span>(!j_tbs[i].<span class="property">checked</span>)&#123;<span class="comment">//有一个按钮没有被选中</span></span></span><br><span class="line"><span class="language-javascript">                        flag = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">break</span>; <span class="comment">//退出for循环，这样可以提高只要效率，因为只要有一个没被选中，就无需循环</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                j_caAll.<span class="property">checked</span> = flag;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Tab栏切换">Tab栏切换:</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> tab_list = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.tab_list&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> lis = tab_list.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> items = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.item&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//for循环绑定点击事件</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt; lis.<span class="property">length</span>; i++)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//开始给5个小li 设置索引号</span></span></span><br><span class="line"><span class="language-javascript">            lis[i].<span class="title function_">setAttribute</span>(<span class="string">&#x27;index&#x27;</span>, i);</span></span><br><span class="line"><span class="language-javascript">            lis[i].<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//1.上的模块选项卡，点击某一个，当前这个底色会是红色，其余不变（排他思想）修改类名的方式</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//获取元素</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//干掉所有人 其余的li清除class 这个类</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span> ;i &lt; lis.<span class="property">length</span>; i++)&#123;</span></span><br><span class="line"><span class="language-javascript">                    lis[i].<span class="property">className</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//留下我自己</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">className</span> = <span class="string">&#x27;current&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//2.下面的显示内容模块</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> index = <span class="variable language_">this</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;index&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(index);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//干掉所有人 让其余的item 这些div隐藏</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; items.<span class="property">length</span>; i++)&#123;</span></span><br><span class="line"><span class="language-javascript">                    items[i].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//留下我自己 让对应的item 显示出来</span></span></span><br><span class="line"><span class="language-javascript">                items[index].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="下拉菜单">下拉菜单:</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1. 获取元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> nav = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.nav&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> lis = nav.<span class="property">children</span>; <span class="comment">//得到四个小li</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2. 循环注册事件</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.<span class="property">length</span>; i++)&#123;</span></span><br><span class="line"><span class="language-javascript">            lis[i].<span class="property">onmouseover</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">children</span>[<span class="number">1</span>].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            lis[i].<span class="property">onmouseout</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">children</span>[<span class="number">1</span>].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="简单留言板">简单留言板:</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1. 获取元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> text = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;textarea&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2. 注册事件</span></span></span><br><span class="line"><span class="language-javascript">        btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(text.<span class="property">value</span> == <span class="string">&#x27;&#x27;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&#x27;您没有输入内容&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(text.value);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//(1)创建元素</span></span></span><br><span class="line"><span class="language-javascript">                 <span class="keyword">var</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                 <span class="comment">//现有li 才能赋值</span></span></span><br><span class="line"><span class="language-javascript">                 li.<span class="property">innerHTML</span> = text.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//(2)添加元素</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// ul.appendChild(li);</span></span></span><br><span class="line"><span class="language-javascript">                ul.<span class="title function_">insertBefore</span>(li,ul.<span class="property">children</span>[<span class="number">0</span>]);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="删除留言">删除留言:</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1. 获取元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> text = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;textarea&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2. 注册事件</span></span></span><br><span class="line"><span class="language-javascript">        btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(text.<span class="property">value</span> == <span class="string">&#x27;&#x27;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&#x27;您没有输入内容&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(text.value);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//(1)创建元素</span></span></span><br><span class="line"><span class="language-javascript">                 <span class="keyword">var</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                 <span class="comment">//现有li 才能赋值</span></span></span><br><span class="line"><span class="language-javascript">                 li.<span class="property">innerHTML</span> = text.<span class="property">value</span>  +  <span class="string">&quot;&lt;a href=&#x27;javascript:;&#x27;&gt;删除&lt;/a&gt;&quot;</span>;<span class="comment">//javascript:;可以阻止链接跳转</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//(2)添加元素</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// ul.appendChild(li);</span></span></span><br><span class="line"><span class="language-javascript">                ul.<span class="title function_">insertBefore</span>(li,ul.<span class="property">children</span>[<span class="number">0</span>]);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//(3)删除元素 删除的是当前链接的li 它的父亲</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> <span class="keyword">as</span> = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;a&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt; <span class="keyword">as</span>.<span class="property">length</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">as</span>[i].<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">//node.removeChild(child); 删除的是li当前所在的li this.parentNode;</span></span></span><br><span class="line"><span class="language-javascript">                        ul.<span class="title function_">removeChild</span>(<span class="variable language_">this</span>.<span class="property">parentNode</span>);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="动态生成表格：">动态生成表格：</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> * @Author: error: git config user.name &amp;&amp; git config user.email &amp; please set dead value or install git</span></span><br><span class="line"><span class="comment"> * @Date: 2022-08-17 12:40:22</span></span><br><span class="line"><span class="comment"> * @LastEditors: error: git config user.name &amp;&amp; git config user.email &amp; please set dead value or install git</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2022-08-17 14:20:42</span></span><br><span class="line"><span class="comment"> * @FilePath: \JS\动态生成表格.html</span></span><br><span class="line"><span class="comment"> * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">table</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-collapse</span>: collapse;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">td</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">th</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">thead</span> <span class="selector-tag">tr</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">cellspacing</span>=<span class="string">&quot;&#x27;0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>科目<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>成绩<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1.先去准备好学生的数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> datas =[</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">&#x27;李季鸿&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">subject</span>: <span class="string">&#x27;javascript&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">score</span>:<span class="number">100</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">&#x27;李季鸿&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">subject</span>: <span class="string">&#x27;C++&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">score</span>:<span class="number">100</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">&#x27;李季鸿&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">subject</span>: <span class="string">&#x27;java&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">score</span>:<span class="number">100</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">&#x27;李季鸿&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">subject</span>: <span class="string">&#x27;linux&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">score</span>:<span class="number">100</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">        ];</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2. 往tbody里面创建行：有几个人（通过数组的长度）我们就创建几行</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> tbody = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;tbody&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; datas.<span class="property">length</span>; i++)&#123;<span class="comment">//外面的for循环管是行 tr</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//1.创建 tr 行</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> tr = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;tr&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            tbody.<span class="title function_">appendChild</span>(tr);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//2.行里面创建单元格(跟数据有关系的3个单元格)  td 单元格的数量取决于每个对象里面的属性个数 for循环遍历对象</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> datas[i])&#123;  <span class="comment">//里卖弄的for循环管的是列 td</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//创建单元格</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> td = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//吧对象里面的属性值 datas[i][k] 给td</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(datas[i][k]);</span></span></span><br><span class="line"><span class="language-javascript">                td.<span class="property">innerHTML</span> = datas[i][k];</span></span><br><span class="line"><span class="language-javascript">                tr.<span class="title function_">appendChild</span>(td);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//3.创建有删除2个字的单元格</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> td = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            td.<span class="property">innerHTML</span> = <span class="string">&quot;&lt;a href=&#x27;javascript:;&#x27;&gt;删除&lt;/a&gt;&quot;</span>;<span class="comment">//javascript:;可以阻止链接跳转</span></span></span><br><span class="line"><span class="language-javascript">            tr.<span class="title function_">appendChild</span>(td);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//4. 删除操作开始</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> <span class="keyword">as</span> = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;a&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">as</span>.<span class="property">length</span>; i++)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">as</span>[i].<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//点击a 删除当前a所在的行(链接的爸爸的爸爸) node.removeChild(child)</span></span></span><br><span class="line"><span class="language-javascript">                tbody.<span class="title function_">removeChild</span>(<span class="variable language_">this</span>.<span class="property">parentNode</span>.<span class="property">parentNode</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
